<Window x:Class="AppsInit.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:AppsInit"
        mc:Ignorable="d"
        Background="#484A4C"
        Title="Add or Remove Programs" Height="720" Width="1280">
    <Window.Resources>
        <Style x:Key="AppsInit.InfoButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="Width" Value="12"/>
            <Setter Property="Margin" Value="0, 2, 0, 5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
            x:Name="Border"
            CornerRadius="5"
            SnapsToDevicePixels="true"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter  Margin="-1, -5.25, 0, 0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="&#128712;"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="Border" Value="#2B2C2D"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#2B2C2D" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AppsInit.ExecuteButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
            x:Name="Border"
            CornerRadius="2"
            SnapsToDevicePixels="true"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="Border" Value="#2B2C2D"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#919293" />
                                <Setter Property="Foreground" Value="#2B2C2D" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AppsInit.OptionsButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
            x:Name="Border"
            CornerRadius="2"
            SnapsToDevicePixels="true"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="Border" Value="#2B2C2D"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#919293" />
                                <Setter Property="Foreground" Value="#2B2C2D" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
    StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush"
    StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <LinearGradientBrush x:Key="PressedBrush"
    StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
                Name="Border"
                Margin="1"
                CornerRadius="2"
                Background="{StaticResource NormalBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}"
                BorderThickness="1">
                            <Path
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Fill="{StaticResource GlyphBrush}"
                    Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background"
                        Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                        Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                CornerRadius="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar"
    TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <Border
        Grid.RowSpan="3"
        CornerRadius="2"
        Background="#B5B6B7" />
                <RepeatButton
        Grid.Row="0"
        Style="{StaticResource ScrollBarLineButton}"
        Height="18"
        Command="ScrollBar.LineUpCommand"
        Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track
        Name="PART_Track"
        Grid.Row="1"
        IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                    Style="{StaticResource ScrollBarPageButton}"
                    Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                Style="{StaticResource ScrollBarThumb}"
                Margin="1,0,1,0"
                Background="{StaticResource HorizontalNormalBrush}"
                BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                Style="{StaticResource ScrollBarPageButton}"
                Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
        Grid.Row="3"
        Style="{StaticResource ScrollBarLineButton}"
        Height="18"
        Command="ScrollBar.LineDownCommand"
        Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border
        Grid.ColumnSpan="3"
        CornerRadius="2"
        Background="#B5B6B7" />
                <RepeatButton
        Grid.Column="0"
        Style="{StaticResource ScrollBarLineButton}"
        Width="18"
        Command="ScrollBar.LineLeftCommand"
        Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track
        Name="PART_Track"
        Grid.Column="1"
        IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                Style="{StaticResource ScrollBarPageButton}"
                Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                Style="{StaticResource ScrollBarThumb}"
                Margin="0,1,0,1"
                Background="{StaticResource NormalBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                Style="{StaticResource ScrollBarPageButton}"
                Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
        Grid.Column="3"
        Style="{StaticResource ScrollBarLineButton}"
        Width="18"
        Command="ScrollBar.LineRightCommand"
        Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="8" />
                    <Setter Property="Template"
                Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="8"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template"
                Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="1"/>
                            <ScrollBar Name="PART_VerticalScrollBar"
                    Value="{TemplateBinding VerticalOffset}"
                    Maximum="{TemplateBinding ScrollableHeight}"
                    ViewportSize="{TemplateBinding ViewportHeight}"
                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar"
                    Orientation="Horizontal"
                    Grid.Row="1"
                    Grid.Column="1"
                    Value="{TemplateBinding HorizontalOffset}"
                    Maximum="{TemplateBinding ScrollableWidth}"
                    ViewportSize="{TemplateBinding ViewportWidth}"
                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
        <Viewbox>
        <Grid Width="960" Height="456">
            <Grid.RowDefinitions>
                <RowDefinition Height="322*"/>
                <RowDefinition Height="61*"/>
            </Grid.RowDefinitions>
            <Grid Background="#484A4C" ShowGridLines="False" Margin="0,50,0,37" Grid.RowSpan="2" Grid.Row="0">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform Y="-40"/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.Column="0">
                    <StackPanel x:Name="StackPanelAppx" Background="#484A4C" SnapsToDevicePixels="True" Margin="10,0,0,0" HorizontalAlignment="Left">
                        <TextBlock FontSize="16" FontWeight="Bold" Width="270" Height="50" Padding="0,5,5,5" Text="Remove Appx Packages" TextAlignment="Left" TextWrapping="Wrap" HorizontalAlignment="Left"/>
                        <TextBlock FontSize="14" Width="270" Height="100" Text="Select check boxes to uninstall microsoft packages. This script will find and remove packages from all user accounts. Format: PackageName + '-v' + Version + '-' + Architecture." TextAlignment="Left" TextWrapping="Wrap" HorizontalAlignment="Left"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="40">
                            <Button Style="{StaticResource AppsInit.OptionsButtonStyle}" x:Name="CheckAppxApps" Height="20" ToolTip="Check or uncheck all boxes" Content="Check All Apps" Margin="5,0,0,0" Width="115"/>
                            <Button Style="{StaticResource AppsInit.OptionsButtonStyle}" x:Name="SaveAppxPackagestoFile" Height="20" ToolTip="Save all checked items to appx_packages_base.json file." Content="Add apps to File" Margin="5,0,0,0" Width="115"/>
                        </StackPanel>
<!-- Remove Appx Packages -->
                    </StackPanel>
                </ScrollViewer>
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.Column="1">
                    <StackPanel x:Name="StackPanelAppxProvisioned" Background="#484A4C" SnapsToDevicePixels="True" Margin="10,0,0,0" HorizontalAlignment="Left">
                        <TextBlock FontSize="16" FontWeight="Bold" Width="270" Height="50" Padding="0,5,5,5" Text="Remove Appx Provisioned Packages" TextAlignment="Left" TextWrapping="Wrap" HorizontalAlignment="Left"/>
                        <TextBlock FontSize="14" Width="270" Height="100" Text="Select check boxes to remove microsoft packages which are installed when an user account is created. This script will disable automatic installation for Windows Disk Image in your local machine." TextAlignment="Left" TextWrapping="Wrap" HorizontalAlignment="Left"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="40">
                            <Button Style="{StaticResource AppsInit.OptionsButtonStyle}" x:Name="CheckAppxProvisionedApps" Height="20" ToolTip="Check or uncheckall boxes" Content="Check All Apps" Margin="5,0,0,0" Width="115"/>
                            <Button Style="{StaticResource AppsInit.OptionsButtonStyle}" x:Name="SaveAppxProvisionedPackagestoFile" Height="20" ToolTip="Save all checked items to appx_provisioned_packages_base.json file." Content="Add apps to File" Margin="5,0,0,0" Width="115"/>
                        </StackPanel>
<!-- Remove Appx Provisioned Packages -->
                    </StackPanel>
                </ScrollViewer>
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.Column="2">
                    <StackPanel x:Name="StackPanelWinget" Background="#484A4C" SnapsToDevicePixels="True" Margin="10,0,0,0" HorizontalAlignment="Left">
                        <TextBlock FontSize="16" FontWeight="Bold" Width="270" Height="50" Padding="0,5,5,5" Text="Install Winget Packages" TextAlignment="Left" TextWrapping="Wrap" HorizontalAlignment="Left"/>
                        <TextBlock FontSize="14" Width="270" Height="100" Text="Select winget packages based setup. &quot;Coding and general gaming&quot; or &quot;KVM Single GPU Passthrough privacy gaming.&quot; To make part work you need to setup winget_install_apps.json" TextAlignment="Left" TextWrapping="Wrap" HorizontalAlignment="Left"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="40">
                            <Button Style="{StaticResource AppsInit.OptionsButtonStyle}" x:Name="KVM" Height="20" ToolTip="Check apps for KVM Privacy Setup" Content="KVM" Margin="5,0,0,0" Width="77"/>
                            <Button Style="{StaticResource AppsInit.OptionsButtonStyle}" x:Name="Coding" Height="20" ToolTip="Check apps for coding and general gaming Setup" Content="Coding" Margin="5,0,0,0" Width="77"/>
                            <Button Style="{StaticResource AppsInit.OptionsButtonStyle}" x:Name="WingetClear" Height="20" ToolTip="Clear selection for winget packages" Content="Clear Boxes" Margin="5,0,0,0" Width="77"/>
                        </StackPanel>
<!-- Install Winget Packages -->
                    </StackPanel>
                </ScrollViewer>
            </Grid>
            <Button x:Name="Execute" Style="{StaticResource AppsInit.ExecuteButtonStyle}" Content="This. Is. Power!" Margin="300,30,300,0" Grid.Row="1" ToolTip="Run"/>
        </Grid>
    </Viewbox>
</Window>
